@model Mini_DBMS.Models.AddForeignKeyModel

@{
    var tableItems = Model.Database.Tables.Select(x => new SelectListItem
    {
        Text = x.Name,
        Value = x.Name
    });
    var tableProperties = new List<SelectListItem>();

    if (!string.IsNullOrEmpty(Model.ReferencedTable))
    {
        tableProperties = Model.Database.Tables.FirstOrDefault(x => x.Name == Model.ReferencedTable).Fields.Select(x => new SelectListItem
        {
            Text = x.Name,
            Value = x.Name
        }).ToList();
    }
}

@using (Ajax.BeginForm("AddForeignKey", "Home", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    OnSuccess = "onModalSuccess",
    OnFailure = "onModalError",
}, new
{
    @class = "form-card vertical-center",
    role = "form",
    id = "AddForeignKeyModal"
}))
{

    <fieldset>
        <h3>Set @Model.Field as foreign key</h3>

        <div class="form-group label-static is-empty">
            <label class="control-label">Table name</label>
            @Html.DropDownListFor(model => model.ReferencedTable, tableItems, new { @class = "form-control" })
        </div>

        <div class="form-group label-static is-empty">
            <label class="control-label">Field name</label>
            @Html.DropDownListFor(model => model.ReferencedProperty, tableProperties, new { @class = "form-control" })
        </div>

        <div class="page-footer">
            <div class="pull-right">
                <button type="submit" class="btn btn-primary">Add<div clifs="ripple-container"></div></button>
            </div>
        </div>
    </fieldset>
}




